#!/c/Users/sp4ce/AppData/Local/Programs/Python/Python38-32/python

import os
import sys
import cv2
import numpy as np
import argparse
import myimutils
import myargutils
import myspritetools
import mycolortools
import time
import math

def get_mask_box(mask,center,sizex,sizey):
    ylim1=int(round(center[0]))-int(sizey/2)
    ylim2=int(round(center[0]))+int(sizey/2)
    xlim1=int(round(center[1]))-int(sizex/2)
    xlim2=int(round(center[1]))+int(sizex/2)
    return mask[ylim1:ylim2,xlim1:xlim2]

def get_mask_diff(mask1,mask2):
    box_area=float(mask1.shape[0]*mask1.shape[1])
    diff=np.sum(np.absolute(mask1.astype('float')-mask2.astype('float')))/box_area
    return diff

#ap = argparse.ArgumentParser()
#ap.add_argument("-i","--image",required=True,help="Path to the image")
#args=vars(ap.parse_args())

iter=5
threshold=0.07
imlist1 = myimutils.read_imdir(sys.argv[1])
image=imlist1[0]
image=image[...,0:3]
fuzz=int(myargutils.check_arg(sys.argv,2,5))
game=myargutils.check_arg(sys.argv,3,'none')
object=myargutils.check_arg(sys.argv,4,'none')
frame=myargutils.check_arg(sys.argv,5,'none')

color_background=mycolortools.imshow_get_color(image,'Select Background Color','x')
indices=mycolortools.select_color(image,color_background,fuzz,invert=True)
mask=myimutils.make_mask(indices,image.shape)

while True:
    box=myimutils.capture_box(image)

    corner1=box[0]
    corner2=box[1]
    image_sub=image[corner1[1]:corner2[1],corner1[0]:corner2[0],:]
    mask_sub=mask[corner1[1]:corner2[1],corner1[0]:corner2[0]]
    image_trans=myimutils.maketransparent_withmask(image_sub,mask_sub)
    image_zoom=cv2.resize(image_trans,(0,0),fx=4,fy=4,interpolation=cv2.INTER_AREA)
    cv2.namedWindow("image2")
    cv2.imshow("image2",image_zoom.astype('uint8'))
    while True:
        key = cv2.waitKey(1) & 0xFF
        if key == ord("a") or key == ord("r") or key == ord("s"):
            break
    if key == ord("a"):
        break
    if key == ord("s"):
        myspritetools.add_sprite_image(image_trans,game,object,frame)
        break

