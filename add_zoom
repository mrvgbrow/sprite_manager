#!/c/Users/sp4ce/AppData/Local/Programs/Python/Python38-32/python

import cv2
import myimutils as myim
import sys
import numpy as np
import argparse
import genutils as genu


ap = argparse.ArgumentParser()
ap.add_argument("infile",help="Name of the input animation",type=str)
ap.add_argument("-o","--outfile",required=False,help="Name of the output file",default='test.gif')
ap.add_argument("-n","--nframes",required=False,help="Number of frames over which to expand",type=int,default=50)
args=vars(ap.parse_args())

imlist1,durations = myim.read_imdir(args['infile'])
shape=imlist1[0].shape
box=myim.capture_box(imlist1[0])
im_obj=imlist1[0][box[0][1]:box[1][1],box[0][0]:box[1][0],0:3]
box_xsize=box[1][0]-box[0][0]
box_ysize=box[1][1]-box[0][1]
if shape[0]/box_ysize>shape[1]/box_xsize:
    max_xsize=shape[1]
    max_ysize=int(shape[1]*box_ysize/box_xsize)
    max_posy=int(shape[0]/2-max_ysize/2)
    max_posx=0
else:
    max_ysize=shape[0]
    max_xsize=int(shape[0]*box_xsize/box_ysize)
    max_posx=int(shape[1]/2-max_xsize/2)
    max_posy=0
myim.img_viewer(im_obj)
sizes=genu.sample_line((box_ysize,box_xsize),(max_ysize,max_xsize),args['nframes'])
positions=genu.sample_line((box[0][0],box[0][1]),(max_posx,max_posy),args['nframes'])
frame0=imlist1[0]

i=0
if len(imlist1)<args['nframes']:
    imlist1=[imlist1[0]]*args['nframes']
for i in range(args['nframes']):
    imlist1[i]=np.copy(frame0)
    imobj_here=cv2.resize(im_obj.copy(),(sizes[i][1],sizes[i][0]),interpolation=cv2.INTER_CUBIC)
    obj_shape=imobj_here.shape
    print(obj_shape,sizes[i])
    if positions[i][1]+obj_shape[0]>shape[0]:
        positions[i]=(positions[i][0],shape[0]-obj_shape[0])
    if positions[i][0]+obj_shape[1]>shape[1]:
        positions[i]=(shape[1]-obj_shape[1],positions[i][1])
    imlist1[i][positions[i][1]:positions[i][1]+obj_shape[0],positions[i][0]:positions[i][0]+obj_shape[1],0:3]=imobj_here

myim.gif_viewer(imlist1,durations,'Result')
imlist1=myim.convert_to_PIL(imlist1)
myim.write_animation(imlist1,durations,args['outfile'],pil=0)
