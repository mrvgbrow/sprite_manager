#!/c/Users/sp4ce/AppData/Local/Programs/Python/Python38-32/python

import numpy as np
import cv2
from PIL import Image
import myimutils as myim
import genutils as genu
import sys
import argparse
import mycolortools as mycolor
import tiletools as tt


ap = argparse.ArgumentParser()
ap.add_argument("game",help="Game that tileset is from",type=str)
ap.add_argument("map",help="Name of the specific tileset",type=str)
ap.add_argument("tilefile",help="Name of the input file with the tiles to lay",type=str)
ap.add_argument("-o","--outfile",required=False,help="Name of the output GIF file",default='default.gif')
ap.add_argument("-x","--sizex",required=False,help="Number of tiles in the x direction",type=int,default=20)
ap.add_argument("-y","--sizey",required=False,help="Number of tiles in the y direction",type=int,default=20)
ap.add_argument("-z","--zoom",required=False,help="Zoom factor for tilemap/tileset display",type=int,default=3)
args=vars(ap.parse_args())

tileset=tt.tileset(args['map'],game=args['game'])
tileset.resize(tileset.tilesize[0]*args['zoom'])
tilesize=tileset.tilesize[0]
new_img=np.zeros((args['sizey']*tilesize,args['sizex']*tilesize,3),dtype='uint8')
shape=new_img.shape

tile_list=tt.read_tile_file(args['tilefile'])
imlist=[]
for i in range(len(tile_list)):
    print(tile_list[i])
    imlist.append(tileset.lay_tiles(new_img.copy(),tile_list[i]))
durations=[10]*len(imlist)
myim.gif_viewer(imlist,durations,'Result')
imlist=myim.convert_to_PIL(imlist)
myim.write_animation(imlist,durations,args['outfile'],pil=1)
